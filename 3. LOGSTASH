input {
  jdbc {
    # MySQL JDBC Connection String
    jdbc_connection_string => "jdbc:mysql://127.0.0.1:3306/taller4"
    # MySQL User
    jdbc_user => "root"
    # MySQL Password
    jdbc_password => "miclave"
    # Path to MySQL JDBC Driver
    jdbc_driver_library => "./mysql-connector-j-8.4.0.jar"
    # JDBC Driver Class
    jdbc_driver_class => "com.mysql.jdbc.Driver"  # Compatible con versiones previas de MySQL
    # SQL Query to fetch data
    statement => "SELECT * FROM migracion"
    # Polling frequency (fetches data every minute)
    schedule => "* * * * * *"
  }
}

filter {
  # Convert latitude and longitude to float
  mutate {
    convert => { "location_long" => "float" }
    convert => { "location_lat" => "float" }
  }

  # Combine latitude and longitude into a geo_point
  mutate {
    add_field => { "location" => "%{location_lat},%{location_long}" }
  }
  mutate {
    remove_field => ["location_lat", "location_long"]
  }

  # Format the timestamp field
  date {
    match => ["timestamp", "ISO8601"]
    target => "timestamp"
  }

  # Add the insertion timestamp
  mutate {
    add_field => { "insertion_timestamp" => "%{+YYYY-MM-dd HH:mm:ss}" }
  }
}

output {
  elasticsearch {
    # Elasticsearch Host
    hosts => ["http://127.0.0.1:9200"]
    # Index to store data
    index => "migracion_data"
    # Document ID to avoid duplicates (using event_id as unique identifier)
    document_id => "%{event_id}"
  }

  # Output to stdout for debugging
  stdout {
    codec => json_lines
  }
}
